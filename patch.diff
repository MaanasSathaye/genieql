diff --git a/driver.go b/driver.go
index 0d0c97e..ea001bf 100644
--- a/driver.go
+++ b/driver.go
@@ -93,6 +93,7 @@ func LoadCustomColumnTypes(c Configuration, d Driver) (Driver, error) {
 type ColumnDefinition struct {
 	Type       string // dialect type
 	Native     string // golang type
+	DBTypeName string `yaml:"database_type_name"`
 	ColumnType string `yaml:"column_type"` // sql type
 	Nullable   bool   // does this type represent a pointer type.
 	PrimaryKey bool   // is the column part of the primary key
@@ -126,6 +127,9 @@ func NewDriver(path string, exports map[string]reflect.Value, supported ...Colum
 	mapped := make(map[string]ColumnDefinition, len(supported))
 	for _, typedef := range supported {
 		mapped[typedef.Type] = typedef
+		if typedef.DBTypeName != "" {
+			mapped[typedef.DBTypeName] = typedef
+		}
 	}
 
 	return &driver{importPath: path, exports: exports, supported: mapped}
@@ -153,6 +157,9 @@ func (t *driver) AddColumnDefinitions(supported ...ColumnDefinition) {
 	mapped := make(map[string]ColumnDefinition, len(supported)+len(t.supported))
 	for _, typedef := range supported {
 		mapped[typedef.Type] = typedef
+		if typedef.DBTypeName != "" {
+			mapped[typedef.DBTypeName] = typedef
+		}
 	}
 
 	for k, v := range t.supported {
