// Code generated by 'yaegi extract github.com/jackc/pgtype'. DO NOT EDIT.

package stdlib

import (
	"github.com/jackc/pgtype"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/jackc/pgtype/pgtype"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ACLItemArrayOID":            reflect.ValueOf(constant.MakeFromLiteral("1034", token.INT, 0)),
		"ACLItemOID":                 reflect.ValueOf(constant.MakeFromLiteral("1033", token.INT, 0)),
		"BPCharArrayOID":             reflect.ValueOf(constant.MakeFromLiteral("1014", token.INT, 0)),
		"BPCharOID":                  reflect.ValueOf(constant.MakeFromLiteral("1042", token.INT, 0)),
		"BinaryFormatCode":           reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"BitOID":                     reflect.ValueOf(constant.MakeFromLiteral("1560", token.INT, 0)),
		"BoolArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1000", token.INT, 0)),
		"BoolOID":                    reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"BoxOID":                     reflect.ValueOf(constant.MakeFromLiteral("603", token.INT, 0)),
		"ByteaArrayOID":              reflect.ValueOf(constant.MakeFromLiteral("1001", token.INT, 0)),
		"ByteaOID":                   reflect.ValueOf(constant.MakeFromLiteral("17", token.INT, 0)),
		"CIDOID":                     reflect.ValueOf(constant.MakeFromLiteral("29", token.INT, 0)),
		"CIDRArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("651", token.INT, 0)),
		"CIDROID":                    reflect.ValueOf(constant.MakeFromLiteral("650", token.INT, 0)),
		"CircleOID":                  reflect.ValueOf(constant.MakeFromLiteral("718", token.INT, 0)),
		"DatabaseSQLValue":           reflect.ValueOf(pgtype.DatabaseSQLValue),
		"DateArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1182", token.INT, 0)),
		"DateOID":                    reflect.ValueOf(constant.MakeFromLiteral("1082", token.INT, 0)),
		"DaterangeOID":               reflect.ValueOf(constant.MakeFromLiteral("3912", token.INT, 0)),
		"Empty":                      reflect.ValueOf(pgtype.Empty),
		"EncodeTextArrayDimensions":  reflect.ValueOf(pgtype.EncodeTextArrayDimensions),
		"EncodeValueText":            reflect.ValueOf(pgtype.EncodeValueText),
		"Exclusive":                  reflect.ValueOf(pgtype.Exclusive),
		"Float4ArrayOID":             reflect.ValueOf(constant.MakeFromLiteral("1021", token.INT, 0)),
		"Float4OID":                  reflect.ValueOf(constant.MakeFromLiteral("700", token.INT, 0)),
		"Float8ArrayOID":             reflect.ValueOf(constant.MakeFromLiteral("1022", token.INT, 0)),
		"Float8OID":                  reflect.ValueOf(constant.MakeFromLiteral("701", token.INT, 0)),
		"GetAssignToDstType":         reflect.ValueOf(pgtype.GetAssignToDstType),
		"Inclusive":                  reflect.ValueOf(pgtype.Inclusive),
		"InetArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1041", token.INT, 0)),
		"InetOID":                    reflect.ValueOf(constant.MakeFromLiteral("869", token.INT, 0)),
		"Infinity":                   reflect.ValueOf(pgtype.Infinity),
		"Int2ArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1005", token.INT, 0)),
		"Int2OID":                    reflect.ValueOf(constant.MakeFromLiteral("21", token.INT, 0)),
		"Int4ArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1007", token.INT, 0)),
		"Int4OID":                    reflect.ValueOf(constant.MakeFromLiteral("23", token.INT, 0)),
		"Int4multirangeOID":          reflect.ValueOf(constant.MakeFromLiteral("4451", token.INT, 0)),
		"Int4rangeOID":               reflect.ValueOf(constant.MakeFromLiteral("3904", token.INT, 0)),
		"Int8ArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1016", token.INT, 0)),
		"Int8OID":                    reflect.ValueOf(constant.MakeFromLiteral("20", token.INT, 0)),
		"Int8multirangeOID":          reflect.ValueOf(constant.MakeFromLiteral("4536", token.INT, 0)),
		"Int8rangeOID":               reflect.ValueOf(constant.MakeFromLiteral("3926", token.INT, 0)),
		"IntervalOID":                reflect.ValueOf(constant.MakeFromLiteral("1186", token.INT, 0)),
		"JSONBArrayOID":              reflect.ValueOf(constant.MakeFromLiteral("3807", token.INT, 0)),
		"JSONBOID":                   reflect.ValueOf(constant.MakeFromLiteral("3802", token.INT, 0)),
		"JSONOID":                    reflect.ValueOf(constant.MakeFromLiteral("114", token.INT, 0)),
		"LineOID":                    reflect.ValueOf(constant.MakeFromLiteral("628", token.INT, 0)),
		"LsegOID":                    reflect.ValueOf(constant.MakeFromLiteral("601", token.INT, 0)),
		"MacaddrOID":                 reflect.ValueOf(constant.MakeFromLiteral("829", token.INT, 0)),
		"NameOID":                    reflect.ValueOf(constant.MakeFromLiteral("19", token.INT, 0)),
		"NegativeInfinity":           reflect.ValueOf(pgtype.NegativeInfinity),
		"NewArrayType":               reflect.ValueOf(pgtype.NewArrayType),
		"NewCompositeBinaryBuilder":  reflect.ValueOf(pgtype.NewCompositeBinaryBuilder),
		"NewCompositeBinaryScanner":  reflect.ValueOf(pgtype.NewCompositeBinaryScanner),
		"NewCompositeTextBuilder":    reflect.ValueOf(pgtype.NewCompositeTextBuilder),
		"NewCompositeTextScanner":    reflect.ValueOf(pgtype.NewCompositeTextScanner),
		"NewCompositeType":           reflect.ValueOf(pgtype.NewCompositeType),
		"NewCompositeTypeValues":     reflect.ValueOf(pgtype.NewCompositeTypeValues),
		"NewConnInfo":                reflect.ValueOf(pgtype.NewConnInfo),
		"NewEnumType":                reflect.ValueOf(pgtype.NewEnumType),
		"NewValue":                   reflect.ValueOf(pgtype.NewValue),
		"None":                       reflect.ValueOf(pgtype.None),
		"Null":                       reflect.ValueOf(pgtype.Null),
		"NullAssignTo":               reflect.ValueOf(pgtype.NullAssignTo),
		"NumericArrayOID":            reflect.ValueOf(constant.MakeFromLiteral("1231", token.INT, 0)),
		"NumericOID":                 reflect.ValueOf(constant.MakeFromLiteral("1700", token.INT, 0)),
		"NummultirangeOID":           reflect.ValueOf(constant.MakeFromLiteral("4532", token.INT, 0)),
		"NumrangeOID":                reflect.ValueOf(constant.MakeFromLiteral("3906", token.INT, 0)),
		"OIDOID":                     reflect.ValueOf(constant.MakeFromLiteral("26", token.INT, 0)),
		"ParseUntypedBinaryRange":    reflect.ValueOf(pgtype.ParseUntypedBinaryRange),
		"ParseUntypedTextArray":      reflect.ValueOf(pgtype.ParseUntypedTextArray),
		"ParseUntypedTextMultirange": reflect.ValueOf(pgtype.ParseUntypedTextMultirange),
		"ParseUntypedTextRange":      reflect.ValueOf(pgtype.ParseUntypedTextRange),
		"PathOID":                    reflect.ValueOf(constant.MakeFromLiteral("602", token.INT, 0)),
		"PointOID":                   reflect.ValueOf(constant.MakeFromLiteral("600", token.INT, 0)),
		"PolygonOID":                 reflect.ValueOf(constant.MakeFromLiteral("604", token.INT, 0)),
		"Present":                    reflect.ValueOf(pgtype.Present),
		"QCharOID":                   reflect.ValueOf(constant.MakeFromLiteral("18", token.INT, 0)),
		"QuoteArrayElementIfNeeded":  reflect.ValueOf(pgtype.QuoteArrayElementIfNeeded),
		"RecordOID":                  reflect.ValueOf(constant.MakeFromLiteral("2249", token.INT, 0)),
		"TIDOID":                     reflect.ValueOf(constant.MakeFromLiteral("27", token.INT, 0)),
		"TextArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("1009", token.INT, 0)),
		"TextFormatCode":             reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"TextOID":                    reflect.ValueOf(constant.MakeFromLiteral("25", token.INT, 0)),
		"TimeOID":                    reflect.ValueOf(constant.MakeFromLiteral("1083", token.INT, 0)),
		"TimestampArrayOID":          reflect.ValueOf(constant.MakeFromLiteral("1115", token.INT, 0)),
		"TimestampOID":               reflect.ValueOf(constant.MakeFromLiteral("1114", token.INT, 0)),
		"TimestamptzArrayOID":        reflect.ValueOf(constant.MakeFromLiteral("1185", token.INT, 0)),
		"TimestamptzOID":             reflect.ValueOf(constant.MakeFromLiteral("1184", token.INT, 0)),
		"TsrangeArrayOID":            reflect.ValueOf(constant.MakeFromLiteral("3909", token.INT, 0)),
		"TsrangeOID":                 reflect.ValueOf(constant.MakeFromLiteral("3908", token.INT, 0)),
		"TstzrangeArrayOID":          reflect.ValueOf(constant.MakeFromLiteral("3911", token.INT, 0)),
		"TstzrangeOID":               reflect.ValueOf(constant.MakeFromLiteral("3910", token.INT, 0)),
		"UUIDArrayOID":               reflect.ValueOf(constant.MakeFromLiteral("2951", token.INT, 0)),
		"UUIDOID":                    reflect.ValueOf(constant.MakeFromLiteral("2950", token.INT, 0)),
		"Unbounded":                  reflect.ValueOf(pgtype.Unbounded),
		"Undefined":                  reflect.ValueOf(pgtype.Undefined),
		"UnknownOID":                 reflect.ValueOf(constant.MakeFromLiteral("705", token.INT, 0)),
		"VarbitOID":                  reflect.ValueOf(constant.MakeFromLiteral("1562", token.INT, 0)),
		"VarcharArrayOID":            reflect.ValueOf(constant.MakeFromLiteral("1015", token.INT, 0)),
		"VarcharOID":                 reflect.ValueOf(constant.MakeFromLiteral("1043", token.INT, 0)),
		"XIDOID":                     reflect.ValueOf(constant.MakeFromLiteral("28", token.INT, 0)),

		// type definitions
		"ACLItem":                reflect.ValueOf((*pgtype.ACLItem)(nil)),
		"ACLItemArray":           reflect.ValueOf((*pgtype.ACLItemArray)(nil)),
		"ArrayDimension":         reflect.ValueOf((*pgtype.ArrayDimension)(nil)),
		"ArrayHeader":            reflect.ValueOf((*pgtype.ArrayHeader)(nil)),
		"ArrayType":              reflect.ValueOf((*pgtype.ArrayType)(nil)),
		"BPChar":                 reflect.ValueOf((*pgtype.BPChar)(nil)),
		"BPCharArray":            reflect.ValueOf((*pgtype.BPCharArray)(nil)),
		"BinaryDecoder":          reflect.ValueOf((*pgtype.BinaryDecoder)(nil)),
		"BinaryEncoder":          reflect.ValueOf((*pgtype.BinaryEncoder)(nil)),
		"Bit":                    reflect.ValueOf((*pgtype.Bit)(nil)),
		"Bool":                   reflect.ValueOf((*pgtype.Bool)(nil)),
		"BoolArray":              reflect.ValueOf((*pgtype.BoolArray)(nil)),
		"BoundType":              reflect.ValueOf((*pgtype.BoundType)(nil)),
		"Box":                    reflect.ValueOf((*pgtype.Box)(nil)),
		"Bytea":                  reflect.ValueOf((*pgtype.Bytea)(nil)),
		"ByteaArray":             reflect.ValueOf((*pgtype.ByteaArray)(nil)),
		"CID":                    reflect.ValueOf((*pgtype.CID)(nil)),
		"CIDR":                   reflect.ValueOf((*pgtype.CIDR)(nil)),
		"CIDRArray":              reflect.ValueOf((*pgtype.CIDRArray)(nil)),
		"Circle":                 reflect.ValueOf((*pgtype.Circle)(nil)),
		"CompositeBinaryBuilder": reflect.ValueOf((*pgtype.CompositeBinaryBuilder)(nil)),
		"CompositeBinaryScanner": reflect.ValueOf((*pgtype.CompositeBinaryScanner)(nil)),
		"CompositeFields":        reflect.ValueOf((*pgtype.CompositeFields)(nil)),
		"CompositeTextBuilder":   reflect.ValueOf((*pgtype.CompositeTextBuilder)(nil)),
		"CompositeTextScanner":   reflect.ValueOf((*pgtype.CompositeTextScanner)(nil)),
		"CompositeType":          reflect.ValueOf((*pgtype.CompositeType)(nil)),
		"CompositeTypeField":     reflect.ValueOf((*pgtype.CompositeTypeField)(nil)),
		"ConnInfo":               reflect.ValueOf((*pgtype.ConnInfo)(nil)),
		"DataType":               reflect.ValueOf((*pgtype.DataType)(nil)),
		"Date":                   reflect.ValueOf((*pgtype.Date)(nil)),
		"DateArray":              reflect.ValueOf((*pgtype.DateArray)(nil)),
		"Daterange":              reflect.ValueOf((*pgtype.Daterange)(nil)),
		"EnumArray":              reflect.ValueOf((*pgtype.EnumArray)(nil)),
		"EnumType":               reflect.ValueOf((*pgtype.EnumType)(nil)),
		"Float4":                 reflect.ValueOf((*pgtype.Float4)(nil)),
		"Float4Array":            reflect.ValueOf((*pgtype.Float4Array)(nil)),
		"Float8":                 reflect.ValueOf((*pgtype.Float8)(nil)),
		"Float8Array":            reflect.ValueOf((*pgtype.Float8Array)(nil)),
		"GenericBinary":          reflect.ValueOf((*pgtype.GenericBinary)(nil)),
		"GenericText":            reflect.ValueOf((*pgtype.GenericText)(nil)),
		"Hstore":                 reflect.ValueOf((*pgtype.Hstore)(nil)),
		"HstoreArray":            reflect.ValueOf((*pgtype.HstoreArray)(nil)),
		"Inet":                   reflect.ValueOf((*pgtype.Inet)(nil)),
		"InetArray":              reflect.ValueOf((*pgtype.InetArray)(nil)),
		"InfinityModifier":       reflect.ValueOf((*pgtype.InfinityModifier)(nil)),
		"Int2":                   reflect.ValueOf((*pgtype.Int2)(nil)),
		"Int2Array":              reflect.ValueOf((*pgtype.Int2Array)(nil)),
		"Int4":                   reflect.ValueOf((*pgtype.Int4)(nil)),
		"Int4Array":              reflect.ValueOf((*pgtype.Int4Array)(nil)),
		"Int4multirange":         reflect.ValueOf((*pgtype.Int4multirange)(nil)),
		"Int4range":              reflect.ValueOf((*pgtype.Int4range)(nil)),
		"Int8":                   reflect.ValueOf((*pgtype.Int8)(nil)),
		"Int8Array":              reflect.ValueOf((*pgtype.Int8Array)(nil)),
		"Int8multirange":         reflect.ValueOf((*pgtype.Int8multirange)(nil)),
		"Int8range":              reflect.ValueOf((*pgtype.Int8range)(nil)),
		"Interval":               reflect.ValueOf((*pgtype.Interval)(nil)),
		"JSON":                   reflect.ValueOf((*pgtype.JSON)(nil)),
		"JSONB":                  reflect.ValueOf((*pgtype.JSONB)(nil)),
		"JSONBArray":             reflect.ValueOf((*pgtype.JSONBArray)(nil)),
		"Line":                   reflect.ValueOf((*pgtype.Line)(nil)),
		"Lseg":                   reflect.ValueOf((*pgtype.Lseg)(nil)),
		"Macaddr":                reflect.ValueOf((*pgtype.Macaddr)(nil)),
		"MacaddrArray":           reflect.ValueOf((*pgtype.MacaddrArray)(nil)),
		"Name":                   reflect.ValueOf((*pgtype.Name)(nil)),
		"Numeric":                reflect.ValueOf((*pgtype.Numeric)(nil)),
		"NumericArray":           reflect.ValueOf((*pgtype.NumericArray)(nil)),
		"Nummultirange":          reflect.ValueOf((*pgtype.Nummultirange)(nil)),
		"Numrange":               reflect.ValueOf((*pgtype.Numrange)(nil)),
		"OID":                    reflect.ValueOf((*pgtype.OID)(nil)),
		"OIDValue":               reflect.ValueOf((*pgtype.OIDValue)(nil)),
		"ParamFormatPreferrer":   reflect.ValueOf((*pgtype.ParamFormatPreferrer)(nil)),
		"Path":                   reflect.ValueOf((*pgtype.Path)(nil)),
		"Point":                  reflect.ValueOf((*pgtype.Point)(nil)),
		"Polygon":                reflect.ValueOf((*pgtype.Polygon)(nil)),
		"QChar":                  reflect.ValueOf((*pgtype.QChar)(nil)),
		"Record":                 reflect.ValueOf((*pgtype.Record)(nil)),
		"RecordArray":            reflect.ValueOf((*pgtype.RecordArray)(nil)),
		"ResultFormatPreferrer":  reflect.ValueOf((*pgtype.ResultFormatPreferrer)(nil)),
		"ScanPlan":               reflect.ValueOf((*pgtype.ScanPlan)(nil)),
		"Status":                 reflect.ValueOf((*pgtype.Status)(nil)),
		"TID":                    reflect.ValueOf((*pgtype.TID)(nil)),
		"Text":                   reflect.ValueOf((*pgtype.Text)(nil)),
		"TextArray":              reflect.ValueOf((*pgtype.TextArray)(nil)),
		"TextDecoder":            reflect.ValueOf((*pgtype.TextDecoder)(nil)),
		"TextEncoder":            reflect.ValueOf((*pgtype.TextEncoder)(nil)),
		"Time":                   reflect.ValueOf((*pgtype.Time)(nil)),
		"Timestamp":              reflect.ValueOf((*pgtype.Timestamp)(nil)),
		"TimestampArray":         reflect.ValueOf((*pgtype.TimestampArray)(nil)),
		"Timestamptz":            reflect.ValueOf((*pgtype.Timestamptz)(nil)),
		"TimestamptzArray":       reflect.ValueOf((*pgtype.TimestamptzArray)(nil)),
		"Tsrange":                reflect.ValueOf((*pgtype.Tsrange)(nil)),
		"TsrangeArray":           reflect.ValueOf((*pgtype.TsrangeArray)(nil)),
		"Tstzrange":              reflect.ValueOf((*pgtype.Tstzrange)(nil)),
		"TstzrangeArray":         reflect.ValueOf((*pgtype.TstzrangeArray)(nil)),
		"TypeValue":              reflect.ValueOf((*pgtype.TypeValue)(nil)),
		"UUID":                   reflect.ValueOf((*pgtype.UUID)(nil)),
		"UUIDArray":              reflect.ValueOf((*pgtype.UUIDArray)(nil)),
		"Unknown":                reflect.ValueOf((*pgtype.Unknown)(nil)),
		"UntypedBinaryRange":     reflect.ValueOf((*pgtype.UntypedBinaryRange)(nil)),
		"UntypedTextArray":       reflect.ValueOf((*pgtype.UntypedTextArray)(nil)),
		"UntypedTextMultirange":  reflect.ValueOf((*pgtype.UntypedTextMultirange)(nil)),
		"UntypedTextRange":       reflect.ValueOf((*pgtype.UntypedTextRange)(nil)),
		"Value":                  reflect.ValueOf((*pgtype.Value)(nil)),
		"ValueTranscoder":        reflect.ValueOf((*pgtype.ValueTranscoder)(nil)),
		"Varbit":                 reflect.ValueOf((*pgtype.Varbit)(nil)),
		"Varchar":                reflect.ValueOf((*pgtype.Varchar)(nil)),
		"VarcharArray":           reflect.ValueOf((*pgtype.VarcharArray)(nil)),
		"Vec2":                   reflect.ValueOf((*pgtype.Vec2)(nil)),
		"XID":                    reflect.ValueOf((*pgtype.XID)(nil)),

		// interface wrapper definitions
		"_BinaryDecoder":         reflect.ValueOf((*_github_com_jackc_pgtype_BinaryDecoder)(nil)),
		"_BinaryEncoder":         reflect.ValueOf((*_github_com_jackc_pgtype_BinaryEncoder)(nil)),
		"_ParamFormatPreferrer":  reflect.ValueOf((*_github_com_jackc_pgtype_ParamFormatPreferrer)(nil)),
		"_ResultFormatPreferrer": reflect.ValueOf((*_github_com_jackc_pgtype_ResultFormatPreferrer)(nil)),
		"_ScanPlan":              reflect.ValueOf((*_github_com_jackc_pgtype_ScanPlan)(nil)),
		"_TextDecoder":           reflect.ValueOf((*_github_com_jackc_pgtype_TextDecoder)(nil)),
		"_TextEncoder":           reflect.ValueOf((*_github_com_jackc_pgtype_TextEncoder)(nil)),
		"_TypeValue":             reflect.ValueOf((*_github_com_jackc_pgtype_TypeValue)(nil)),
		"_Value":                 reflect.ValueOf((*_github_com_jackc_pgtype_Value)(nil)),
		"_ValueTranscoder":       reflect.ValueOf((*_github_com_jackc_pgtype_ValueTranscoder)(nil)),
	}
}

// _github_com_jackc_pgtype_BinaryDecoder is an interface wrapper for BinaryDecoder type
type _github_com_jackc_pgtype_BinaryDecoder struct {
	IValue        interface{}
	WDecodeBinary func(ci *pgtype.ConnInfo, src []byte) error
}

func (W _github_com_jackc_pgtype_BinaryDecoder) DecodeBinary(ci *pgtype.ConnInfo, src []byte) error {
	return W.WDecodeBinary(ci, src)
}

// _github_com_jackc_pgtype_BinaryEncoder is an interface wrapper for BinaryEncoder type
type _github_com_jackc_pgtype_BinaryEncoder struct {
	IValue        interface{}
	WEncodeBinary func(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error)
}

func (W _github_com_jackc_pgtype_BinaryEncoder) EncodeBinary(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error) {
	return W.WEncodeBinary(ci, buf)
}

// _github_com_jackc_pgtype_ParamFormatPreferrer is an interface wrapper for ParamFormatPreferrer type
type _github_com_jackc_pgtype_ParamFormatPreferrer struct {
	IValue                interface{}
	WPreferredParamFormat func() int16
}

func (W _github_com_jackc_pgtype_ParamFormatPreferrer) PreferredParamFormat() int16 {
	return W.WPreferredParamFormat()
}

// _github_com_jackc_pgtype_ResultFormatPreferrer is an interface wrapper for ResultFormatPreferrer type
type _github_com_jackc_pgtype_ResultFormatPreferrer struct {
	IValue                 interface{}
	WPreferredResultFormat func() int16
}

func (W _github_com_jackc_pgtype_ResultFormatPreferrer) PreferredResultFormat() int16 {
	return W.WPreferredResultFormat()
}

// _github_com_jackc_pgtype_ScanPlan is an interface wrapper for ScanPlan type
type _github_com_jackc_pgtype_ScanPlan struct {
	IValue interface{}
	WScan  func(ci *pgtype.ConnInfo, oid uint32, formatCode int16, src []byte, dst interface{}) error
}

func (W _github_com_jackc_pgtype_ScanPlan) Scan(ci *pgtype.ConnInfo, oid uint32, formatCode int16, src []byte, dst interface{}) error {
	return W.WScan(ci, oid, formatCode, src, dst)
}

// _github_com_jackc_pgtype_TextDecoder is an interface wrapper for TextDecoder type
type _github_com_jackc_pgtype_TextDecoder struct {
	IValue      interface{}
	WDecodeText func(ci *pgtype.ConnInfo, src []byte) error
}

func (W _github_com_jackc_pgtype_TextDecoder) DecodeText(ci *pgtype.ConnInfo, src []byte) error {
	return W.WDecodeText(ci, src)
}

// _github_com_jackc_pgtype_TextEncoder is an interface wrapper for TextEncoder type
type _github_com_jackc_pgtype_TextEncoder struct {
	IValue      interface{}
	WEncodeText func(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error)
}

func (W _github_com_jackc_pgtype_TextEncoder) EncodeText(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error) {
	return W.WEncodeText(ci, buf)
}

// _github_com_jackc_pgtype_TypeValue is an interface wrapper for TypeValue type
type _github_com_jackc_pgtype_TypeValue struct {
	IValue        interface{}
	WAssignTo     func(dst interface{}) error
	WGet          func() interface{}
	WNewTypeValue func() pgtype.Value
	WSet          func(src interface{}) error
	WTypeName     func() string
}

func (W _github_com_jackc_pgtype_TypeValue) AssignTo(dst interface{}) error {
	return W.WAssignTo(dst)
}
func (W _github_com_jackc_pgtype_TypeValue) Get() interface{} {
	return W.WGet()
}
func (W _github_com_jackc_pgtype_TypeValue) NewTypeValue() pgtype.Value {
	return W.WNewTypeValue()
}
func (W _github_com_jackc_pgtype_TypeValue) Set(src interface{}) error {
	return W.WSet(src)
}
func (W _github_com_jackc_pgtype_TypeValue) TypeName() string {
	return W.WTypeName()
}

// _github_com_jackc_pgtype_Value is an interface wrapper for Value type
type _github_com_jackc_pgtype_Value struct {
	IValue    interface{}
	WAssignTo func(dst interface{}) error
	WGet      func() interface{}
	WSet      func(src interface{}) error
}

func (W _github_com_jackc_pgtype_Value) AssignTo(dst interface{}) error {
	return W.WAssignTo(dst)
}
func (W _github_com_jackc_pgtype_Value) Get() interface{} {
	return W.WGet()
}
func (W _github_com_jackc_pgtype_Value) Set(src interface{}) error {
	return W.WSet(src)
}

// _github_com_jackc_pgtype_ValueTranscoder is an interface wrapper for ValueTranscoder type
type _github_com_jackc_pgtype_ValueTranscoder struct {
	IValue        interface{}
	WAssignTo     func(dst interface{}) error
	WDecodeBinary func(ci *pgtype.ConnInfo, src []byte) error
	WDecodeText   func(ci *pgtype.ConnInfo, src []byte) error
	WEncodeBinary func(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error)
	WEncodeText   func(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error)
	WGet          func() interface{}
	WSet          func(src interface{}) error
}

func (W _github_com_jackc_pgtype_ValueTranscoder) AssignTo(dst interface{}) error {
	return W.WAssignTo(dst)
}
func (W _github_com_jackc_pgtype_ValueTranscoder) DecodeBinary(ci *pgtype.ConnInfo, src []byte) error {
	return W.WDecodeBinary(ci, src)
}
func (W _github_com_jackc_pgtype_ValueTranscoder) DecodeText(ci *pgtype.ConnInfo, src []byte) error {
	return W.WDecodeText(ci, src)
}
func (W _github_com_jackc_pgtype_ValueTranscoder) EncodeBinary(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error) {
	return W.WEncodeBinary(ci, buf)
}
func (W _github_com_jackc_pgtype_ValueTranscoder) EncodeText(ci *pgtype.ConnInfo, buf []byte) (newBuf []byte, err error) {
	return W.WEncodeText(ci, buf)
}
func (W _github_com_jackc_pgtype_ValueTranscoder) Get() interface{} {
	return W.WGet()
}
func (W _github_com_jackc_pgtype_ValueTranscoder) Set(src interface{}) error {
	return W.WSet(src)
}
