// Code generated by 'yaegi extract bitbucket.org/jatone/genieql/generators'. DO NOT EDIT.

package runtime

// import (
// 	"bitbucket.org/jatone/genieql/generators"
// 	"go/constant"
// 	"go/token"
// 	"reflect"
// )

// func init() {
// 	Symbols["bitbucket.org/jatone/genieql/generators/generators"] = map[string]reflect.Value{
// 		// function, constant and variable definitions
// 		"AllBuiltinTypes":                    reflect.ValueOf(generators.AllBuiltinTypes),
// 		"ColumnMapEncoder":                   reflect.ValueOf(generators.ColumnMapEncoder),
// 		"ColumnMapFromFields":                reflect.ValueOf(generators.ColumnMapFromFields),
// 		"CommentOptionDefaultColumns":        reflect.ValueOf(generators.CommentOptionDefaultColumns),
// 		"CommentOptionQuery":                 reflect.ValueOf(generators.CommentOptionQuery),
// 		"CommentOptionQueryConst":            reflect.ValueOf(generators.CommentOptionQueryConst),
// 		"CommentOptionQueryLiteral":          reflect.ValueOf(generators.CommentOptionQueryLiteral),
// 		"CommentOptionTable":                 reflect.ValueOf(generators.CommentOptionTable),
// 		"DefaultFunctionComment":             reflect.ValueOf(generators.DefaultFunctionComment),
// 		"GapLines":                           reflect.ValueOf(generators.GapLines),
// 		"GenerateComment":                    reflect.ValueOf(generators.GenerateComment),
// 		"MapField":                           reflect.ValueOf(generators.MapField),
// 		"MapFields":                          reflect.ValueOf(generators.MapFields),
// 		"ModeDynamic":                        reflect.ValueOf(generators.ModeDynamic),
// 		"ModeInterface":                      reflect.ValueOf(generators.ModeInterface),
// 		"ModeStatic":                         reflect.ValueOf(generators.ModeStatic),
// 		"ModeStaticDisableColumns":           reflect.ValueOf(generators.ModeStaticDisableColumns),
// 		"NewColumnConstantFromFieldList":     reflect.ValueOf(generators.NewColumnConstantFromFieldList),
// 		"NewColumnConstants":                 reflect.ValueOf(generators.NewColumnConstants),
// 		"NewContext":                         reflect.ValueOf(generators.NewContext),
// 		"NewContextDeprecated":               reflect.ValueOf(generators.NewContextDeprecated),
// 		"NewExploderFunction":                reflect.ValueOf(generators.NewExploderFunction),
// 		"NewQueryFunction":                   reflect.ValueOf(generators.NewQueryFunction),
// 		"NewQueryFunctionFromFuncDecl":       reflect.ValueOf(generators.NewQueryFunctionFromFuncDecl),
// 		"NewQueryFunctionFromFuncType":       reflect.ValueOf(generators.NewQueryFunctionFromFuncType),
// 		"NewQueryFunctionFromGenDecl":        reflect.ValueOf(generators.NewQueryFunctionFromGenDecl),
// 		"NewScanner":                         reflect.ValueOf(generators.NewScanner),
// 		"NewStructure":                       reflect.ValueOf(generators.NewStructure),
// 		"NormalizeFieldNames":                reflect.ValueOf(generators.NormalizeFieldNames),
// 		"NormalizeIdent":                     reflect.ValueOf(generators.NormalizeIdent),
// 		"OptionDebug":                        reflect.ValueOf(generators.OptionDebug),
// 		"OptionOSArgs":                       reflect.ValueOf(generators.OptionOSArgs),
// 		"ParseCommentOptions":                reflect.ValueOf(generators.ParseCommentOptions),
// 		"QFOBuiltinQuery":                    reflect.ValueOf(generators.QFOBuiltinQuery),
// 		"QFOBuiltinQueryFromString":          reflect.ValueOf(generators.QFOBuiltinQueryFromString),
// 		"QFOComment":                         reflect.ValueOf(generators.QFOComment),
// 		"QFOExplodeStructParam":              reflect.ValueOf(generators.QFOExplodeStructParam),
// 		"QFOFromComment":                     reflect.ValueOf(generators.QFOFromComment),
// 		"QFOIgnore":                          reflect.ValueOf(generators.QFOIgnore),
// 		"QFOName":                            reflect.ValueOf(generators.QFOName),
// 		"QFONoop":                            reflect.ValueOf(generators.QFONoop),
// 		"QFOParameters":                      reflect.ValueOf(generators.QFOParameters),
// 		"QFOQueryer":                         reflect.ValueOf(generators.QFOQueryer),
// 		"QFOQueryerFunction":                 reflect.ValueOf(generators.QFOQueryerFunction),
// 		"QFOScanner":                         reflect.ValueOf(generators.QFOScanner),
// 		"QFOSharedParameters":                reflect.ValueOf(generators.QFOSharedParameters),
// 		"QFOTemplate":                        reflect.ValueOf(generators.QFOTemplate),
// 		"QueryFieldsFromColumnMap":           reflect.ValueOf(generators.QueryFieldsFromColumnMap),
// 		"QueryInputsFromColumnMap":           reflect.ValueOf(generators.QueryInputsFromColumnMap),
// 		"SanitizeFieldIdents":                reflect.ValueOf(generators.SanitizeFieldIdents),
// 		"ScannerErrorHandling":               reflect.ValueOf(generators.ScannerErrorHandling),
// 		"ScannerErrorHandlingExpr":           reflect.ValueOf(generators.ScannerErrorHandlingExpr),
// 		"ScannerFromGenDecl":                 reflect.ValueOf(generators.ScannerFromGenDecl),
// 		"ScannerOptionColumnNameTransformer": reflect.ValueOf(generators.ScannerOptionColumnNameTransformer),
// 		"ScannerOptionConfiguration":         reflect.ValueOf(generators.ScannerOptionConfiguration),
// 		"ScannerOptionContext":               reflect.ValueOf(generators.ScannerOptionContext),
// 		"ScannerOptionEnableMode":            reflect.ValueOf(generators.ScannerOptionEnableMode),
// 		"ScannerOptionIgnoreSet":             reflect.ValueOf(generators.ScannerOptionIgnoreSet),
// 		"ScannerOptionInterfaceName":         reflect.ValueOf(generators.ScannerOptionInterfaceName),
// 		"ScannerOptionName":                  reflect.ValueOf(generators.ScannerOptionName),
// 		"ScannerOptionNoop":                  reflect.ValueOf(generators.ScannerOptionNoop),
// 		"ScannerOptionOutputMode":            reflect.ValueOf(generators.ScannerOptionOutputMode),
// 		"ScannerOptionPackage":               reflect.ValueOf(generators.ScannerOptionPackage),
// 		"ScannerOptionParameters":            reflect.ValueOf(generators.ScannerOptionParameters),
// 		"ScannerOptionsFromComment":          reflect.ValueOf(generators.ScannerOptionsFromComment),
// 		"StructOptionAliasStrategy":          reflect.ValueOf(generators.StructOptionAliasStrategy),
// 		"StructOptionColumnsStrategy":        reflect.ValueOf(generators.StructOptionColumnsStrategy),
// 		"StructOptionComment":                reflect.ValueOf(generators.StructOptionComment),
// 		"StructOptionContext":                reflect.ValueOf(generators.StructOptionContext),
// 		"StructOptionMappingConfigOptions":   reflect.ValueOf(generators.StructOptionMappingConfigOptions),
// 		"StructOptionName":                   reflect.ValueOf(generators.StructOptionName),
// 		"StructOptionQueryStrategy":          reflect.ValueOf(generators.StructOptionQueryStrategy),
// 		"StructOptionRenameMap":              reflect.ValueOf(generators.StructOptionRenameMap),
// 		"StructOptionTableStrategy":          reflect.ValueOf(generators.StructOptionTableStrategy),
// 		"StructureQueryParameters":           reflect.ValueOf(generators.StructureQueryParameters),
// 		"VerbosityDebug":                     reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
// 		"VerbosityError":                     reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
// 		"VerbosityInfo":                      reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
// 		"VerbosityTrace":                     reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
// 		"VerbosityWarn":                      reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),

// 		// type definitions
// 		"ColumnConstantContext": reflect.ValueOf((*generators.ColumnConstantContext)(nil)),
// 		"Context":               reflect.ValueOf((*generators.Context)(nil)),
// 		"Option":                reflect.ValueOf((*generators.Option)(nil)),
// 		"QueryFunctionOption":   reflect.ValueOf((*generators.QueryFunctionOption)(nil)),
// 		"ScannerOption":         reflect.ValueOf((*generators.ScannerOption)(nil)),
// 		"StructOption":          reflect.ValueOf((*generators.StructOption)(nil)),
// 	}
// }
