package functions

import (
	"database/sql"
	"net"
	"time"

	"bitbucket.org/jatone/genieql/internal/sqlx"
	"github.com/jackc/pgtype"
)

// DO NOT MODIFY: This File was auto generated by the following command:
// genieql generate experimental crud -o postgresql.crud.functions.gen.go --table=example1 --scanner=NewExample1ScannerDynamic --unique-scanner=NewExample1ScannerStaticRow Example1
// invoked by go generate @ functions/functions.go line 5

// Example1Insert generated by genieql
func Example1Insert(q sqlx.Queryer, arg1 Example1) Example1ScannerStaticRow {
	const query = `INSERT INTO example1 ("bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26) RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field"`
	var (
		c0  pgtype.Int8
		c1  pgtype.Bit
		c2  pgtype.Varbit
		c3  pgtype.Bool
		c4  pgtype.Bytea
		c5  pgtype.Varchar
		c6  pgtype.BPChar
		c7  pgtype.CIDR
		c8  pgtype.Numeric
		c9  pgtype.Float8
		c10 pgtype.Inet
		c11 pgtype.Int2Array
		c12 pgtype.Int4Array
		c13 pgtype.Int8Array
		c14 pgtype.Int4
		c15 pgtype.Interval
		c16 pgtype.JSON
		c17 pgtype.JSONB
		c18 pgtype.Macaddr
		c19 pgtype.Numeric
		c20 pgtype.Float4
		c21 pgtype.Int2
		c22 pgtype.Text
		c23 pgtype.Timestamptz
		c24 pgtype.UUIDArray
		c25 pgtype.UUID
	)

	if err := c0.Set(&arg1.BigintField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c1.Set(&arg1.BitField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c2.Set(&arg1.BitVaryingField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c3.Set(&arg1.BoolField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c4.Set(&arg1.ByteArrayField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c5.Set(&arg1.CharacterField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c6.Set(&arg1.CharacterFixedField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c7.Set(&arg1.CidrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c8.Set(&arg1.DecimalField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c9.Set(&arg1.DoublePrecisionField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c10.Set(&arg1.InetField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c11.Set(&arg1.Int2Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c12.Set(&arg1.Int4Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c13.Set(&arg1.Int8Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c14.Set(&arg1.IntField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c15.Set(&arg1.IntervalField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c16.Set(&arg1.JSONField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c17.Set(&arg1.JsonbField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c18.Set(&arg1.MacaddrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c19.Set(&arg1.NumericField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c20.Set(&arg1.RealField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c21.Set(&arg1.SmallintField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c22.Set(&arg1.TextField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c23.Set(&arg1.TimestampField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c24.Set(&arg1.UUIDArray); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c25.Set(&arg1.UUIDField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25))
}

// Example1FindByBigintField generated by genieql
func Example1FindByBigintField(q sqlx.Queryer, bigintField int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bigint_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(bigintField)

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByBigintField generated by genieql
func Example1LookupByBigintField(q sqlx.Queryer, bigintField int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bigint_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(bigintField)

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByBitField generated by genieql
func Example1FindByBitField(q sqlx.Queryer, bitField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(bitField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByBitField generated by genieql
func Example1LookupByBitField(q sqlx.Queryer, bitField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(bitField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByBitVaryingField generated by genieql
func Example1FindByBitVaryingField(q sqlx.Queryer, bitVaryingField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_varying_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(bitVaryingField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByBitVaryingField generated by genieql
func Example1LookupByBitVaryingField(q sqlx.Queryer, bitVaryingField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_varying_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(bitVaryingField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByBoolField generated by genieql
func Example1FindByBoolField(q sqlx.Queryer, boolField bool) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bool_field" = $1`
	var (
		c0 sql.NullBool
	)

	c0.Valid = true
	c0.Bool = boolField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByBoolField generated by genieql
func Example1LookupByBoolField(q sqlx.Queryer, boolField bool) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bool_field" = $1`
	var (
		c0 sql.NullBool
	)

	c0.Valid = true
	c0.Bool = boolField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByByteArrayField generated by genieql
func Example1FindByByteArrayField(q sqlx.Queryer, byteArrayField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "byte_array_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(byteArrayField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByByteArrayField generated by genieql
func Example1LookupByByteArrayField(q sqlx.Queryer, byteArrayField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "byte_array_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(byteArrayField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByCharacterField generated by genieql
func Example1FindByCharacterField(q sqlx.Queryer, characterField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = characterField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByCharacterField generated by genieql
func Example1LookupByCharacterField(q sqlx.Queryer, characterField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = characterField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByCharacterFixedField generated by genieql
func Example1FindByCharacterFixedField(q sqlx.Queryer, characterFixedField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_fixed_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = characterFixedField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByCharacterFixedField generated by genieql
func Example1LookupByCharacterFixedField(q sqlx.Queryer, characterFixedField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_fixed_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = characterFixedField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByCidrField generated by genieql
func Example1FindByCidrField(q sqlx.Queryer, cidrField net.IPNet) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "cidr_field" = $1`
	var (
		c0 pgtype.CIDR
	)

	if err := c0.Set(cidrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByCidrField generated by genieql
func Example1LookupByCidrField(q sqlx.Queryer, cidrField net.IPNet) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "cidr_field" = $1`
	var (
		c0 pgtype.CIDR
	)

	if err := c0.Set(cidrField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByDecimalField generated by genieql
func Example1FindByDecimalField(q sqlx.Queryer, decimalField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "decimal_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = decimalField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByDecimalField generated by genieql
func Example1LookupByDecimalField(q sqlx.Queryer, decimalField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "decimal_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = decimalField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByDoublePrecisionField generated by genieql
func Example1FindByDoublePrecisionField(q sqlx.Queryer, doublePrecisionField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "double_precision_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = doublePrecisionField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByDoublePrecisionField generated by genieql
func Example1LookupByDoublePrecisionField(q sqlx.Queryer, doublePrecisionField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "double_precision_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = doublePrecisionField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByInetField generated by genieql
func Example1FindByInetField(q sqlx.Queryer, inetField net.IP) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "inet_field" = $1`
	var (
		c0 pgtype.Inet
	)

	if err := c0.Set(inetField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByInetField generated by genieql
func Example1LookupByInetField(q sqlx.Queryer, inetField net.IP) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "inet_field" = $1`
	var (
		c0 pgtype.Inet
	)

	if err := c0.Set(inetField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByInt2Array generated by genieql
func Example1FindByInt2Array(q sqlx.Queryer, int2Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int2_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int2Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByInt2Array generated by genieql
func Example1LookupByInt2Array(q sqlx.Queryer, int2Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int2_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int2Array); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByInt4Array generated by genieql
func Example1FindByInt4Array(q sqlx.Queryer, int4Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int4_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int4Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByInt4Array generated by genieql
func Example1LookupByInt4Array(q sqlx.Queryer, int4Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int4_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int4Array); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByInt8Array generated by genieql
func Example1FindByInt8Array(q sqlx.Queryer, int8Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int8_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int8Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByInt8Array generated by genieql
func Example1LookupByInt8Array(q sqlx.Queryer, int8Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int8_array" = $1`
	var (
		c0 pgtype.Int8Array
	)

	if err := c0.Set(int8Array); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByIntField generated by genieql
func Example1FindByIntField(q sqlx.Queryer, intField int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(intField)

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByIntField generated by genieql
func Example1LookupByIntField(q sqlx.Queryer, intField int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(intField)

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByIntervalField generated by genieql
func Example1FindByIntervalField(q sqlx.Queryer, intervalField time.Duration) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "interval_field" = $1`
	var (
		c0 pgtype.Interval
	)

	if err := c0.Set(intervalField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByIntervalField generated by genieql
func Example1LookupByIntervalField(q sqlx.Queryer, intervalField time.Duration) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "interval_field" = $1`
	var (
		c0 pgtype.Interval
	)

	if err := c0.Set(intervalField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByJSONField generated by genieql
func Example1FindByJSONField(q sqlx.Queryer, jsonField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "json_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(jsonField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByJSONField generated by genieql
func Example1LookupByJSONField(q sqlx.Queryer, jsonField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "json_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(jsonField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByJsonbField generated by genieql
func Example1FindByJsonbField(q sqlx.Queryer, jsonbField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "jsonb_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(jsonbField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByJsonbField generated by genieql
func Example1LookupByJsonbField(q sqlx.Queryer, jsonbField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "jsonb_field" = $1`
	var (
		c0 pgtype.Bytea
	)

	if err := c0.Set(jsonbField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByMacaddrField generated by genieql
func Example1FindByMacaddrField(q sqlx.Queryer, macaddrField net.HardwareAddr) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "macaddr_field" = $1`
	var (
		c0 pgtype.Macaddr
	)

	if err := c0.Set(macaddrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByMacaddrField generated by genieql
func Example1LookupByMacaddrField(q sqlx.Queryer, macaddrField net.HardwareAddr) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "macaddr_field" = $1`
	var (
		c0 pgtype.Macaddr
	)

	if err := c0.Set(macaddrField); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByNumericField generated by genieql
func Example1FindByNumericField(q sqlx.Queryer, numericField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "numeric_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = numericField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByNumericField generated by genieql
func Example1LookupByNumericField(q sqlx.Queryer, numericField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "numeric_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = numericField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByRealField generated by genieql
func Example1FindByRealField(q sqlx.Queryer, realField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "real_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = float64(realField)

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByRealField generated by genieql
func Example1LookupByRealField(q sqlx.Queryer, realField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "real_field" = $1`
	var (
		c0 sql.NullFloat64
	)

	c0.Valid = true
	c0.Float64 = float64(realField)

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindBySmallintField generated by genieql
func Example1FindBySmallintField(q sqlx.Queryer, smallintField int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "smallint_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(smallintField)

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupBySmallintField generated by genieql
func Example1LookupBySmallintField(q sqlx.Queryer, smallintField int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "smallint_field" = $1`
	var (
		c0 sql.NullInt64
	)

	c0.Valid = true
	c0.Int64 = int64(smallintField)

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByTextField generated by genieql
func Example1FindByTextField(q sqlx.Queryer, textField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "text_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = textField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByTextField generated by genieql
func Example1LookupByTextField(q sqlx.Queryer, textField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "text_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = textField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByTimestampField generated by genieql
func Example1FindByTimestampField(q sqlx.Queryer, timestampField time.Time) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "timestamp_field" = $1`
	var (
		c0 sql.NullTime
	)

	c0.Valid = true
	c0.Time = timestampField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByTimestampField generated by genieql
func Example1LookupByTimestampField(q sqlx.Queryer, timestampField time.Time) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "timestamp_field" = $1`
	var (
		c0 sql.NullTime
	)

	c0.Valid = true
	c0.Time = timestampField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByUUIDArray generated by genieql
func Example1FindByUUIDArray(q sqlx.Queryer, uuidArray []string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_array" = $1`
	var (
		c0 pgtype.TextArray
	)

	if err := c0.Set(uuidArray); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByUUIDArray generated by genieql
func Example1LookupByUUIDArray(q sqlx.Queryer, uuidArray []string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_array" = $1`
	var (
		c0 pgtype.TextArray
	)

	if err := c0.Set(uuidArray); err != nil {
		return NewExample1ScannerDynamic(nil, err)
	}

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByUUIDField generated by genieql
func Example1FindByUUIDField(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = uuidField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1LookupByUUIDField generated by genieql
func Example1LookupByUUIDField(q sqlx.Queryer, uuidField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = uuidField

	return NewExample1ScannerDynamic(q.Query(query, c0))
}

// Example1FindByKey generated by genieql
func Example1FindByKey(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = uuidField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}

// Example1UpdateByID generated by genieql
func Example1UpdateByID(q sqlx.Queryer, uuidField string, update Example1) Example1ScannerStaticRow {
	const query = `UPDATE example1 SET "bigint_field" = $1, "bit_field" = $2, "bit_varying_field" = $3, "bool_field" = $4, "byte_array_field" = $5, "character_field" = $6, "character_fixed_field" = $7, "cidr_field" = $8, "decimal_field" = $9, "double_precision_field" = $10, "inet_field" = $11, "int2_array" = $12, "int4_array" = $13, "int8_array" = $14, "int_field" = $15, "interval_field" = $16, "json_field" = $17, "jsonb_field" = $18, "macaddr_field" = $19, "numeric_field" = $20, "real_field" = $21, "smallint_field" = $22, "text_field" = $23, "timestamp_field" = $24, "uuid_array" = $25 WHERE "uuid_field" = $26 RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array"`
	var (
		c0  sql.NullString
		c1  pgtype.Int8
		c2  pgtype.Bit
		c3  pgtype.Varbit
		c4  pgtype.Bool
		c5  pgtype.Bytea
		c6  pgtype.Varchar
		c7  pgtype.BPChar
		c8  pgtype.CIDR
		c9  pgtype.Numeric
		c10 pgtype.Float8
		c11 pgtype.Inet
		c12 pgtype.Int2Array
		c13 pgtype.Int4Array
		c14 pgtype.Int8Array
		c15 pgtype.Int4
		c16 pgtype.Interval
		c17 pgtype.JSON
		c18 pgtype.JSONB
		c19 pgtype.Macaddr
		c20 pgtype.Numeric
		c21 pgtype.Float4
		c22 pgtype.Int2
		c23 pgtype.Text
		c24 pgtype.Timestamptz
		c25 pgtype.UUIDArray
		c26 pgtype.UUID
	)

	c0.Valid = true
	c0.String = uuidField

	if err := c1.Set(&update.BigintField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c2.Set(&update.BitField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c3.Set(&update.BitVaryingField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c4.Set(&update.BoolField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c5.Set(&update.ByteArrayField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c6.Set(&update.CharacterField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c7.Set(&update.CharacterFixedField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c8.Set(&update.CidrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c9.Set(&update.DecimalField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c10.Set(&update.DoublePrecisionField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c11.Set(&update.InetField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c12.Set(&update.Int2Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c13.Set(&update.Int4Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c14.Set(&update.Int8Array); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c15.Set(&update.IntField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c16.Set(&update.IntervalField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c17.Set(&update.JSONField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c18.Set(&update.JsonbField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c19.Set(&update.MacaddrField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c20.Set(&update.NumericField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c21.Set(&update.RealField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c22.Set(&update.SmallintField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c23.Set(&update.TextField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c24.Set(&update.TimestampField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c25.Set(&update.UUIDArray); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	if err := c26.Set(&update.UUIDField); err != nil {
		return NewExample1ScannerStaticRow(nil).Err(err)
	}

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26))
}

// Example1DeleteByID generated by genieql
func Example1DeleteByID(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `DELETE FROM example1 WHERE "uuid_field" = $1 RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field"`
	var (
		c0 sql.NullString
	)

	c0.Valid = true
	c0.String = uuidField

	return NewExample1ScannerStaticRow(q.QueryRow(query, c0))
}
