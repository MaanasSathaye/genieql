package examples

// DO NOT MODIFY: This File was auto generated by the following command:
// genieql generate crud --config=scanner-test.config --output=type1_queries.gen.go bitbucket.org/jatone/genieql/scanner/internal/examples.Type1 type1
// invoked by go generate @ examples/type1.go line 10

const QueryType1Insert = `INSERT INTO type1 (field1,field2,field3,field4,field5,field6,field7,field8) VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING field1,field2,field3,field4,field5,field6,field7,field8`
const QueryType1FindByField1 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field1 = $1`
const QueryType1FindByField2 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field2 = $1`
const QueryType1FindByField3 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field3 = $1`
const QueryType1FindByField4 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field4 = $1`
const QueryType1FindByField5 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field5 = $1`
const QueryType1FindByField6 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field6 = $1`
const QueryType1FindByField7 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field7 = $1`
const QueryType1FindByField8 = `SELECT field1,field2,field3,field4,field5,field6,field7,field8 FROM type1 WHERE field8 = $1`

func NewType1Scanner(query QueryExecer, a, b, c int, d, e, f string) FunctionScanner {
	var (
		r   *sql.Rows
		err error
	)

	r, err = query.Query(a, b, c, d, e, f)

	return FunctionScanner{
		rows: r,
		err:  err,
	}
}

func Type1Insert(qe QueryExecer, field1 string, field2 *string, field3 bool, field4 *bool,field5 int,field6 *int,field7 time.Time,field8 *time.Time) Type1
func Type1FindByField1(qe QueryExecer, field1 string) Type1Scanner {

}

func Type1FindByField2(qe QueryRunner, field2 *string) Type1Scanner {
	const q = ``
	return NewType1Scanner(qe.WithQuery(q).Query(field2))
}

func Type1FindByField3(qe QueryExecer, field3 bool) Type1Scanner {
	return NewType1Scanner(qe.Query(field3))
}

func Type1FindByField4(qe QueryExecer, field4 *bool) Type1Scanner {

}

func Type1FindByField5(qe QueryExecer, field5 int) Type1Scanner {

}

func Type1FindByField6(qe QueryExecer, field6 *int) Type1Scanner {

}

func Type1FindByField7(qe QueryExecer, field7 time.Time) Type1Scanner {

}

func Type1FindByField8(qe QueryExecer, field8 *time.Time) Type1Scanner {

}
