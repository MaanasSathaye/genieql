package definitions

import (
	"net"
	"time"

	"bitbucket.org/jatone/genieql/internal/sqlx"
)

// DO NOT MODIFY: This File was auto generated by the following command:
// genieql generate experimental crud -o postgresql.crud.functions.gen.go --table=example1 --scanner=NewExample1ScannerDynamic --unique-scanner=NewExample1ScannerStaticRow Example1
// invoked by go generate @ definitions/example.go line 6

// Example1Insert generated by genieql
func Example1Insert(q sqlx.Queryer, arg1 Example1) Example1ScannerStaticRow {
	const query = `INSERT INTO example1 ("bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26) RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field"`
	return NewExample1ScannerStaticRow(q.QueryRow(query, arg1.BigintField, arg1.BitField, arg1.BitVaryingField, arg1.BoolField, arg1.ByteArrayField, arg1.CharacterField, arg1.CharacterFixedField, arg1.CidrField, arg1.DecimalField, arg1.DoublePrecisionField, arg1.InetField, arg1.Int2Array, arg1.Int4Array, arg1.Int8Array, arg1.IntField, arg1.IntervalField, arg1.JSONField, arg1.JsonbField, arg1.MacaddrField, arg1.NumericField, arg1.RealField, arg1.SmallintField, arg1.TextField, arg1.TimestampField, arg1.UUIDArray, arg1.UUIDField))
}

// Example1FindByBigintField generated by genieql
func Example1FindByBigintField(q sqlx.Queryer, bigintField int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bigint_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, bigintField))
}

// Example1LookupByBigintField generated by genieql
func Example1LookupByBigintField(q sqlx.Queryer, bigintField int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bigint_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, bigintField))
}

// Example1FindByBitField generated by genieql
func Example1FindByBitField(q sqlx.Queryer, bitField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, bitField))
}

// Example1LookupByBitField generated by genieql
func Example1LookupByBitField(q sqlx.Queryer, bitField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, bitField))
}

// Example1FindByBitVaryingField generated by genieql
func Example1FindByBitVaryingField(q sqlx.Queryer, bitVaryingField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_varying_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, bitVaryingField))
}

// Example1LookupByBitVaryingField generated by genieql
func Example1LookupByBitVaryingField(q sqlx.Queryer, bitVaryingField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bit_varying_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, bitVaryingField))
}

// Example1FindByBoolField generated by genieql
func Example1FindByBoolField(q sqlx.Queryer, boolField bool) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bool_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, boolField))
}

// Example1LookupByBoolField generated by genieql
func Example1LookupByBoolField(q sqlx.Queryer, boolField bool) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "bool_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, boolField))
}

// Example1FindByByteArrayField generated by genieql
func Example1FindByByteArrayField(q sqlx.Queryer, byteArrayField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "byte_array_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, byteArrayField))
}

// Example1LookupByByteArrayField generated by genieql
func Example1LookupByByteArrayField(q sqlx.Queryer, byteArrayField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "byte_array_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, byteArrayField))
}

// Example1FindByCharacterField generated by genieql
func Example1FindByCharacterField(q sqlx.Queryer, characterField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, characterField))
}

// Example1LookupByCharacterField generated by genieql
func Example1LookupByCharacterField(q sqlx.Queryer, characterField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, characterField))
}

// Example1FindByCharacterFixedField generated by genieql
func Example1FindByCharacterFixedField(q sqlx.Queryer, characterFixedField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_fixed_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, characterFixedField))
}

// Example1LookupByCharacterFixedField generated by genieql
func Example1LookupByCharacterFixedField(q sqlx.Queryer, characterFixedField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "character_fixed_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, characterFixedField))
}

// Example1FindByCidrField generated by genieql
func Example1FindByCidrField(q sqlx.Queryer, cidrField net.IPNet) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "cidr_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, cidrField))
}

// Example1LookupByCidrField generated by genieql
func Example1LookupByCidrField(q sqlx.Queryer, cidrField net.IPNet) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "cidr_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, cidrField))
}

// Example1FindByDecimalField generated by genieql
func Example1FindByDecimalField(q sqlx.Queryer, decimalField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "decimal_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, decimalField))
}

// Example1LookupByDecimalField generated by genieql
func Example1LookupByDecimalField(q sqlx.Queryer, decimalField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "decimal_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, decimalField))
}

// Example1FindByDoublePrecisionField generated by genieql
func Example1FindByDoublePrecisionField(q sqlx.Queryer, doublePrecisionField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "double_precision_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, doublePrecisionField))
}

// Example1LookupByDoublePrecisionField generated by genieql
func Example1LookupByDoublePrecisionField(q sqlx.Queryer, doublePrecisionField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "double_precision_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, doublePrecisionField))
}

// Example1FindByInetField generated by genieql
func Example1FindByInetField(q sqlx.Queryer, inetField net.IP) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "inet_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, inetField))
}

// Example1LookupByInetField generated by genieql
func Example1LookupByInetField(q sqlx.Queryer, inetField net.IP) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "inet_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, inetField))
}

// Example1FindByInt2Array generated by genieql
func Example1FindByInt2Array(q sqlx.Queryer, int2Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int2_array" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, int2Array))
}

// Example1LookupByInt2Array generated by genieql
func Example1LookupByInt2Array(q sqlx.Queryer, int2Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int2_array" = $1`
	return NewExample1ScannerDynamic(q.Query(query, int2Array))
}

// Example1FindByInt4Array generated by genieql
func Example1FindByInt4Array(q sqlx.Queryer, int4Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int4_array" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, int4Array))
}

// Example1LookupByInt4Array generated by genieql
func Example1LookupByInt4Array(q sqlx.Queryer, int4Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int4_array" = $1`
	return NewExample1ScannerDynamic(q.Query(query, int4Array))
}

// Example1FindByInt8Array generated by genieql
func Example1FindByInt8Array(q sqlx.Queryer, int8Array []int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int8_array" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, int8Array))
}

// Example1LookupByInt8Array generated by genieql
func Example1LookupByInt8Array(q sqlx.Queryer, int8Array []int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int8_array" = $1`
	return NewExample1ScannerDynamic(q.Query(query, int8Array))
}

// Example1FindByIntField generated by genieql
func Example1FindByIntField(q sqlx.Queryer, intField int) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, intField))
}

// Example1LookupByIntField generated by genieql
func Example1LookupByIntField(q sqlx.Queryer, intField int) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "int_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, intField))
}

// Example1FindByIntervalField generated by genieql
func Example1FindByIntervalField(q sqlx.Queryer, intervalField time.Duration) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "interval_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, intervalField))
}

// Example1LookupByIntervalField generated by genieql
func Example1LookupByIntervalField(q sqlx.Queryer, intervalField time.Duration) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "interval_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, intervalField))
}

// Example1FindByJSONField generated by genieql
func Example1FindByJSONField(q sqlx.Queryer, jsonField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "json_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, jsonField))
}

// Example1LookupByJSONField generated by genieql
func Example1LookupByJSONField(q sqlx.Queryer, jsonField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "json_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, jsonField))
}

// Example1FindByJsonbField generated by genieql
func Example1FindByJsonbField(q sqlx.Queryer, jsonbField []byte) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "jsonb_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, jsonbField))
}

// Example1LookupByJsonbField generated by genieql
func Example1LookupByJsonbField(q sqlx.Queryer, jsonbField []byte) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "jsonb_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, jsonbField))
}

// Example1FindByMacaddrField generated by genieql
func Example1FindByMacaddrField(q sqlx.Queryer, macaddrField net.HardwareAddr) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "macaddr_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, macaddrField))
}

// Example1LookupByMacaddrField generated by genieql
func Example1LookupByMacaddrField(q sqlx.Queryer, macaddrField net.HardwareAddr) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "macaddr_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, macaddrField))
}

// Example1FindByNumericField generated by genieql
func Example1FindByNumericField(q sqlx.Queryer, numericField float64) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "numeric_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, numericField))
}

// Example1LookupByNumericField generated by genieql
func Example1LookupByNumericField(q sqlx.Queryer, numericField float64) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "numeric_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, numericField))
}

// Example1FindByRealField generated by genieql
func Example1FindByRealField(q sqlx.Queryer, realField float32) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "real_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, realField))
}

// Example1LookupByRealField generated by genieql
func Example1LookupByRealField(q sqlx.Queryer, realField float32) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "real_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, realField))
}

// Example1FindBySmallintField generated by genieql
func Example1FindBySmallintField(q sqlx.Queryer, smallintField int16) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "smallint_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, smallintField))
}

// Example1LookupBySmallintField generated by genieql
func Example1LookupBySmallintField(q sqlx.Queryer, smallintField int16) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "smallint_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, smallintField))
}

// Example1FindByTextField generated by genieql
func Example1FindByTextField(q sqlx.Queryer, textField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "text_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, textField))
}

// Example1LookupByTextField generated by genieql
func Example1LookupByTextField(q sqlx.Queryer, textField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "text_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, textField))
}

// Example1FindByTimestampField generated by genieql
func Example1FindByTimestampField(q sqlx.Queryer, timestampField time.Time) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "timestamp_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, timestampField))
}

// Example1LookupByTimestampField generated by genieql
func Example1LookupByTimestampField(q sqlx.Queryer, timestampField time.Time) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "timestamp_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, timestampField))
}

// Example1FindByUUIDArray generated by genieql
func Example1FindByUUIDArray(q sqlx.Queryer, uuidArray []string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_array" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, uuidArray))
}

// Example1LookupByUUIDArray generated by genieql
func Example1LookupByUUIDArray(q sqlx.Queryer, uuidArray []string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_array" = $1`
	return NewExample1ScannerDynamic(q.Query(query, uuidArray))
}

// Example1FindByUUIDField generated by genieql
func Example1FindByUUIDField(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, uuidField))
}

// Example1LookupByUUIDField generated by genieql
func Example1LookupByUUIDField(q sqlx.Queryer, uuidField string) Example1Scanner {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	return NewExample1ScannerDynamic(q.Query(query, uuidField))
}

// Example1FindByKey generated by genieql
func Example1FindByKey(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `SELECT "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field" FROM example1 WHERE "uuid_field" = $1`
	return NewExample1ScannerStaticRow(q.QueryRow(query, uuidField))
}

// Example1UpdateByID generated by genieql
func Example1UpdateByID(q sqlx.Queryer, uuidField string, update Example1) Example1ScannerStaticRow {
	const query = `UPDATE example1 SET "bigint_field" = $1, "bit_field" = $2, "bit_varying_field" = $3, "bool_field" = $4, "byte_array_field" = $5, "character_field" = $6, "character_fixed_field" = $7, "cidr_field" = $8, "decimal_field" = $9, "double_precision_field" = $10, "inet_field" = $11, "int2_array" = $12, "int4_array" = $13, "int8_array" = $14, "int_field" = $15, "interval_field" = $16, "json_field" = $17, "jsonb_field" = $18, "macaddr_field" = $19, "numeric_field" = $20, "real_field" = $21, "smallint_field" = $22, "text_field" = $23, "timestamp_field" = $24, "uuid_array" = $25 WHERE "uuid_field" = $26 RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array"`
	return NewExample1ScannerStaticRow(q.QueryRow(query, update.BigintField, update.BitField, update.BitVaryingField, update.BoolField, update.ByteArrayField, update.CharacterField, update.CharacterFixedField, update.CidrField, update.DecimalField, update.DoublePrecisionField, update.InetField, update.Int2Array, update.Int4Array, update.Int8Array, update.IntField, update.IntervalField, update.JSONField, update.JsonbField, update.MacaddrField, update.NumericField, update.RealField, update.SmallintField, update.TextField, update.TimestampField, update.UUIDArray, uuid_field))
}

// Example1DeleteByID generated by genieql
func Example1DeleteByID(q sqlx.Queryer, uuidField string) Example1ScannerStaticRow {
	const query = `DELETE FROM example1 WHERE "uuid_field" = $1 RETURNING "bigint_field","bit_field","bit_varying_field","bool_field","byte_array_field","character_field","character_fixed_field","cidr_field","decimal_field","double_precision_field","inet_field","int2_array","int4_array","int8_array","int_field","interval_field","json_field","jsonb_field","macaddr_field","numeric_field","real_field","smallint_field","text_field","timestamp_field","uuid_array","uuid_field"`
	return NewExample1ScannerStaticRow(q.QueryRow(query, uuidField))
}
