// Package genieql generates code to interact with a database.
package genieql

import (
	"go/format"
	"go/token"
	"io"

	"golang.org/x/tools/imports"
)

// Preface text inserted at the top of all generated files.
const Preface = `

// DO NOT MODIFY: This File was auto generated by genieql.
// genieql %s

`

// TableDetails provides information about the table.
type TableDetails struct {
	Dialect    Dialect
	Table      string
	Naturalkey []string
	Columns    []string
}

// ScannerGenerator interface for scanner generators.
type ScannerGenerator interface {
	Scanner(dst io.Writer, fset *token.FileSet) error
}

// FormatOutput formats and resolves imports for the raw bytes representing a go
// source file and writes them into the dst.
func FormatOutput(dst io.Writer, raw []byte) error {
	var err error
	if raw, err = imports.Process("", raw, nil); err != nil {
		return err
	}

	if raw, err = format.Source(raw); err != nil {
		return err
	}

	_, err = dst.Write(raw)
	return err
}
